APP="pegala"

BUILD_HOST="104.131.89.232"
BUILD_USER="rafa"
BUILD_AT="/home/$BUILD_USER/edeliver/$APP/builds"

# Used by umbrella projects only
RELEASE_DIR="$BUILD_AT/rel/$APP"

PRODUCTION_HOSTS="104.131.89.232"
PRODUCTION_USER="rafa"
DELIVER_TO="/home/rafa/$APP"

HOST="$BUILD_USER@$BUILD_HOST"

pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/home/rafa/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then

    scp "`pwd`/apps/api/config/prod.secret.exs" $HOST:/$BUILD_AT/apps/api/config/prod.secret.exs
    scp "`pwd`/apps/db/config/prod.secret.exs" $HOST:/$BUILD_AT/apps/db/config/prod.secret.exs
    scp "`pwd`/apps/core/config/prod.secret.exs" $HOST:/$BUILD_AT/apps/core/config/prod.secret.exs
    scp "`pwd`/apps/central/config/prod.secret.exs" $HOST:/$BUILD_AT/apps/central/config/prod.secret.exs

    # __sync_remote "
    #   ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
    # "
  fi
}

pre_erlang_clean_compile() {
  status "npm install"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd $BUILD_AT/apps/central/assets
    pwd
    npm install
  "

  status "Building production assets"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    cd $BUILD_AT/apps/central/assets
    brunch build --production
  "

  status "Running phx.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd $BUILD_AT
    mkdir -p priv/static # required by the phx.digest task
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest
  "

  status "Running migrations"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    cd $BUILD_AT/apps/db
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD ecto.migrate
  "
}
